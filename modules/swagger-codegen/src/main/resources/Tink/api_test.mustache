{{>licenseInfo}}

package {{package}};

import {{invokerPackage}}.ApiException;
import {{invokerPackage}}.ApiResponse;
{{#imports}}import {{import}};
{{/imports}}
import okhttp3.OkHttpClient;
import okhttp3.mockwebserver.MockWebServer;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for {{classname}}
 */
@Ignore
public class {{classname}}Test {

    private final String token = "qwertyuiop";
    String baseUrl = "https://changeme";
    MockWebServer server = null;

    @Before
    public void setUp() {
        try {
            server = new MockWebServer();
            server.start();
            baseUrl = server.url("").toString();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    @After
    public void tearDown() {
        try {
            if(server != null) server.shutdown();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    {{#operations}}{{#operation}}
    /**
     * {{summary}}
     *
     * {{notes}}
     *
     * @throws ApiException   if the Api call fails
     */
    @Test
    public void {{operationId}}Test() throws ApiException {

        // TODO: Enqueue responses
        // server.enqueue(new MockResponse().setBody("hello, world!"));
    
        {{classname}} api = new {{classname}}Impl(token, baseUrl, new OkHttpClient());
    
        {{#allParams}}
        {{{dataType}}} {{paramName}} = null;
        {{/allParams}}
        {{#returnType}}ApiResponse<{{{returnType}}}> response = {{/returnType}}api.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
    
        // TODO: test validations
    }
    {{/operation}}{{/operations}}
}
